<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:component-scan base-package="kr.maxerve.admin" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

	<!-- Enables the Spring MVC @Controller programming model -->
<!-- 	<annotation-driven /> -->
<!-- 		<argument-resolvers> -->
<!-- 			<beans:bean class="com.khs.xml.framework.handlermethodargumentresolverex" /> -->
<!-- 		</argument-resolvers> -->
<!-- 	</annotation-driven> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="webBindingInitializer">
		    <beans:bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		        <beans:property name="validator" ref="validator"/>
		    </beans:bean>
		</beans:property>
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<beans:bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <beans:property name="validationMessageSource" ref="messageSource" />
    </beans:bean>

    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <beans:bean id="imageRenderer" class="kr.maxerve.admin.framework.CustomPaginationRenderer"/>

	<beans:bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
		<beans:property name="rendererType">
			<beans:map>
				<beans:entry key="image" value-ref="imageRenderer"/>
			</beans:map>
		</beans:property>
	</beans:bean>

    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    	<beans:property name="definitions">
    		<beans:list>
    			<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
    		</beans:list>
    	</beans:property>
    	<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory"></beans:property>
    </beans:bean>

    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<beans:property name="order" value="1" />
    	<beans:property name="contentNegotiationManager">
    		<beans:bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
<!--     			<beans:property name="favorPathExtension" value="false" /> -->
    			<beans:property name="mediaTypes">
    				<beans:value>
    					do=text/html
    					json=application/json
    				</beans:value>
    			</beans:property>
    			<beans:property name="defaultContentType" value="application/json" />
    		</beans:bean>
    	</beans:property>
    	<beans:property name="viewResolvers">
    		<beans:list>
    			<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
				<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"></beans:property>
				</beans:bean>
    		</beans:list>
    	</beans:property>
    	<beans:property name="defaultViews">
    		<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
    		</beans:list>
    	</beans:property>
    </beans:bean>

    <beans:bean id="downloadView" class="kr.maxerve.admin.framework.DownloadView" />

    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<beans:property name="order" value="2" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

<!-- 	컨트롤러 인터셉터 -->
	<interceptors>
	   	<interceptor>
	   	    <mapping path="/**/*.do"/>
	   	    <mapping path="/**/"/>
	   	   	<beans:bean class="kr.maxerve.admin.framework.ControllerInterceptor"/>
	   	</interceptor>
	</interceptors>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000"/>
		<beans:property name="maxInMemorySize" value="100000000"/>
	</beans:bean>

</beans:beans>